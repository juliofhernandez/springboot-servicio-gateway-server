resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 6
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 1s
    instances:
      productsCircuitBreaker:
        base-config: default
  timelimiter:
    configs:
      default:
        timeout-duration: 2s
    instances:
      productsCircuitBreaker:
        base-config: default

spring:
  cloud:
    gateway:
      routes:
      - id: service-products
        uri: lb://service-products
        predicates:
          - Path=/api/product/**
#          - Header=X-Header-Predicate,\d+
#          - Method=GET,POST
#          - Query=paramQueryColor,blue
#          - Cookie=cookie_predicate_country,IT
        filters:
          - StripPrefix=2
          - name: CircuitBreaker
            args:
              name: productsCircuitBreaker
              statusCodes: 500
              fallbackUri: forward:/api/item/items/1
          - name: Ejemplo
            args:
              mensajePRE: "Hola, Mensaje personalizado PRE"
              mensajePOST: "Hola, Mensaje personalizado POST"
              cookieNombre: cookie_name
              cookieValor:  juliofhernandez
      - id: service-items
        uri: lb://service-items
        predicates:
          - Path=/api/item/**
        filters:
          - StripPrefix=2
          - AddRequestParameter=paramRequestItems,julio
          - AddRequestHeader=X-Header-Request-Items,123123
          - AddResponseHeader=X-Header-Response-Items,456456
      - id: service-users
        uri: lb://service-users
        predicates:
          - Path=/api/users/**
        filters:
          - StripPrefix=2
      - id: service-oauth
        uri: lb://service-oauth
        predicates:
          - Path=/api/oauth/**
        filters:
          - StripPrefix=2
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://127.0.0.1:9100
      client:
        registration:
          client-app:
            provider: spring
            client-id: gateway-app
            client-secret: password
            authorization-grant-type: authorization_code
            redirect-uri: http://127.0.0.1:8090/login/oauth2/code/client-app
            scope:
              - openid
              - profile
              - write
              - read
            client-name: client-app
        provider:
          spring:
            issuer-uri: http://127.0.0.1:9100